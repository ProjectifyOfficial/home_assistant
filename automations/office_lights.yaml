# Auto Office Brightness
  - alias: Office Auto Brightness
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id: group.office_motion
        to: 'on'
    condition:
      - condition: state
        entity_id: group.family
        state: 'home'
      - condition: state
        entity_id: light.office
        state: 'off'
    action:
      - service: light.turn_on
        data_template:
          entity_id: light.office
          brightness_pct: "{{ state_attr('switch.circadian_lighting_office', 'brightness') | int }}"
      - delay:
          seconds: '1'
      - service: light.turn_on
        data_template:
          entity_id: light.office
          brightness_pct: "{{ state_attr('switch.circadian_lighting_office', 'brightness') | int }}"

# Auto Office Brightness Transition
  - alias: Office Auto Brightness Transition
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id: sun.sun
    condition:
      - condition: state
        entity_id: group.family
        state: 'home'
      - condition: state
        entity_id: light.office
        state: 'on'
    action:
      - service: light.turn_on
        data_template:
          entity_id: light.office
          brightness_pct: "{{ state_attr('switch.circadian_lighting_office', 'brightness') | int }}"
          transition: 60

# Turn off Office Lights after one minute of no activity
  - alias: Turn office lights without motion one min
    initial_state: 'on'
    trigger:
#      platform: state
#      entity_id: binary_sensor.office_motion_sensor_motion
#      to: 'off'
#      for:
#        minutes: 6
      platform: time_pattern
      minutes: '/5'
    condition:
      - condition: state
        entity_id: input_boolean.sean_office_presence
        state: 'off'
      - condition: state
        entity_id: input_boolean.emily_office_presence
        state: 'off'
      - condition: state
        entity_id: group.office_motion
        state: 'off'
      - condition: state
        entity_id: input_boolean.office_occupied
        state: 'off'
      - condition: template
        value_template: "{{ not is_state('sensor.steam_76561197976250572', 'online') }}" # NOT condition
    action:
      - service: light.turn_off
        data:
          entity_id: light.office
          transition: 2
      - delay:
          seconds: '1'
      - service: light.turn_off
        data:
          entity_id: light.office
          transition: 2

# Turn off Office Lights after one minute of no activity
#  - alias: Turn office lights without motion one min
#    initial_state: 'on'
#    trigger:
#      platform: state
#      entity_id: binary_sensor.office_motion_sensor_motion
#      to: 'off'
#      for:
#        minutes: '6'
#    condition:
#      condition: and
#      conditions:
#        - condition: numeric_state
#          entity_id: sensor.laptop_socket
#          below: '3'
#        - condition: template
#          value_template: "{{ not is_state('sensor.steam_76561197976250572', 'online') }}" # NOT condition
#    action:
#      - service: light.turn_off
#        data:
#          entity_id: light.office
#          transition: 2

# Turn off Office lights above lux
#  - alias: Turn off office lights above lux
#    initial_state: 'on'
#    trigger:
#      platform: numeric_state
#      entity_id: sensor.office_lux
#      above: 31
#    condition:
#      - condition: time
#        after: '06:00:00'
#        before: '20:00:00'
#    action:
#      service: light.turn_off
#      data:
#        entity_id: light.office
#        transition: 2
